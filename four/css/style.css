* {
	box-sizing: border-box;
}

body,
html {
	height: 100%;
	font-family: "微软雅黑";
	margin: 0px;
}

body > header {
	width: 100%;
	background: #333333;
	max-height: 140px;
	overflow: hidden;
	position: absolute;
	top: 0px;
	z-index: 1;
}

header > nav {
	margin: 0px 15px 0px 15px;
	min-width: 440px;
}

header > nav > h1 {
	margin: 0px;
	color: white;
	float: left;
	padding: 13px 0px;
}

header > nav > ul {
	float: right;
	margin: 19px 0px;
}

header > nav > ul li {
	float: left;
	margin-left: 20px;
	list-style-type: none;
}

header > nav > ul li a {
	color: white;
	text-decoration: none;
}

header > nav > ul li a:hover {
	color: #999999;
}

main {
	height: 100%;
	width: 100%;
	position: relative;
	top: 120px;
	
	
	
	/* 表格 */
	display: table;
	/* 表格 */
	
	
	/*flex*/
/*	
	display: flex;
	justify-content: center;
	align-items: center;
*/
	/*flex*/
}


/* 内层使用相对定位，给两个子元素使用绝对定位做好铺垫*/

.nei {
	width: 100%;
	height: 100%;
}


	/* 表格 */
.wai { display: table-cell;
vertical-align: middle;}
	/* 表格 */
	
.son {
	width: 100px;
	height: 100px;
	border-radius: 50px;
	background: #ffcc00;
}



/* 里面的两个圆使用absolute*/


/*
 	优缺点分析：
 	
 		优点：
 		1.使用的时候，可以不用考虑 父的长宽。
 		2，父内的标准文档流不会受到这两个元素的影响。
 		
 		缺点：
		1.父需要是相对定位， 因此该任务需要为灰色长方形追加一个内框并且加上相对定位。
  */


.father {
	width: 400px;
	min-height: 200px;
	background: #CCCCCC;
	overflow: hidden;
	position: relative;
	
	/* 表格 */
	margin: 0px auto;
	/* 表格 */
}

.first {
	position: absolute;
	top: -50px;
	left: -50px;
}

.second {
	position: absolute;
	right: -50px;
	bottom: -50px;
}
.father p {  padding: 0px 50px 0px 50px;}

/*
 兼容性比较好的是 表格方法
 */